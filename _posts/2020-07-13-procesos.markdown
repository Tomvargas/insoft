---
layout: default
title:  "Ciclo de vida del software"
date:   2020-07-13 12:0:54 -0500
author: Tomas Vargas
permalink: /posts/vida-software
---
<script src="https://kit.fontawesome.com/7316530f41.js" crossorigin="anonymous"></script>
<p>Publicado por: <a class="aa" href="https://github.com/tomvargas">Tomas Vargas</a></p>

<h1>CICLO DE VIDA DEL SOFTWARE</h1>
<hr> 
<p>Es importante conocer la teoría de cada cosa, pues incluso un programa de computación con sus debidos márgenes de
calidad o usabilidad posee su respectiva documentación que en este caso vendría a ser la parte teórica donde muestran
las funciones del software evaluado, como usarlo, recomendaciones para los usuarios y aun más cosas que sirven de guía
para el usuario.</p>
<hr>
<h2>Atajos</h2>
<p> <a class="aa" href="#cic">> Ciclo de vida del software</a></p>
<p> <a class="aa" href="#proc">> Procesos</a  ></p>
<hr>
<p>Actualmente en las carreras relacionadas al desarrollo de software, la mayoría de estudiantes que piensan crear un
programa creen que programarlo basta para culminar el proyecto propuesto, sin embargo todo tiene su evaluación con
respecto a la calidad, es importante saber y entender que para desarrollar un software requiere más que una simple idea,
para esto se debe tener en cuenta un estudio de los usuarios con respecto a la usabilidad del software, es decir
analizar la demanda del servicio que ofrecerá el programa y en base a eso innovar para crear más impacto social dejando
atrás posibles competencias, siendo todo esto un solo punto a tener en cuenta para desarrollar un programa de calidad se
sobreentiende la importancia que tiene seguir el ciclo de vida del software.</p>
<p>Al momento de comenzar todo el proceso de desarrollo del software se debe tener en cuenta que pueden suceder muchos
inconvenientes y más que saber cómo resolverlos es esencial saber como llevar a cabo el proyecto escogiendo un método
que mas le convenga al software, de esa manera reducir los problemas futuros que se pueda presentar durante el
desarrollo.</p>

<h2>Objetivos</h2>
<hr>

* Conocer y dominar la teoría acerca del ciclo de vida del software.

* Analizar los conceptos del ciclo de vida del software

* Especificar los procesos para el ciclo de vida del software


<h2 id="cic">Ciclo de vida del software</h2>
<hr>
<div><img src="https://static.platzi.com/media/user_upload/Pruebas-ciclo-835002f6-962a-4c8c-9512-cfdee1a5db13.jpg" alt="Ciclo básico del software - Platzi">
<p style="font-style: italic;">Fuente: <a class="aa" href="https://platzi.com/clases/1421-pruebas-software/15303-ciclo-de-vida-del-software/">Platzi</a></p></div>
<p>Un software debe cumplir con algunos requisitos para poder ser categorizado como un programa de calidad por ello, el
ciclo de vida del software es un proceso que se lleva a cabo con el fin de elaborar, entregar y hacer evolucionar el
programa.</p>
<p>Para el proceso mencionado se definen algunas fases esenciales para validar el desarrollo del software, en otras
palabras, esas fases son importantes para garantizar que el software cumpla con los más altos estándares.</p>
<h3 id="proc">Procesos para el ciclo de vida del software</h3>
<p>Para detectar errores lo antes posible e impedir problemas mucho más complejos de resolver el ciclo de vida de un
software, se propone los siguientes procedimientos:</p>

* **Definición de objetivos:** En esta fase se especifica la finalidad del proyecto y el panel estratégico que se llevará a cabo para el desarrollo.

* **Análisis de los requisitos y su viabilidad:** Se trata de recopilar, examinar y formular los requisitos de un cliente además de analizar alguna restricción que se pueda aplicar.

* **Diseño general:** Se especifican los requisitos generales con respecto a la arquitectura del proyecto.

* **Diseño en detalle:** Se define de manera precisa todos los subconjuntos que se emplearan en el software.

* **Programación e implementación:** Elegir un lenguaje de programación que se adapte más al proyecto para crear el software y sus funciones.

* **Prueba de unidad:** Garantizar la buena implementación de los subconjuntos o funciones del proyecto por medio de pruebas individuales.

* **Integración:** Garantizar la implementación de cada función del proyecto acompañada de su correcta y correspondiente documentación.

* **Prueba beta:** Garantiza el funcionamiento del software y el cumplimiento de cada objetivo planteado en un inicio.

* **Documentación:** Se documenta la información necesaria para los usuarios y futuros desarrollos.

* **Implementación:** Lanzamiento público del proyecto.

* **Mantenimiento:** Corresponde a las respectivas actualizaciones para corregir errores.




<hr>
<h3>Fuentes</h3>
* <p>Ecured, <a class="aa" href="https://www.ecured.cu/index.php?title=Ciclo_de_vida_del_software">Ciclo de vida del software. </a></p>

* <p>Villagomez v. <a class="aa" href="https://es.ccm.net/contents/223-ciclo-de-vida-del-software#:~:text=vida%20del%20software-,Ciclo%20de%20vida%20del%20'software',inicial%20hasta%20la%20fase%20final.&text=El%20ciclo%20de%20vida%20b%C3%A1sico,papel%20en%20la%20estrategia%20global.">Ciclo de vida del software.</a></p>

* <p>Platzi,<a class="aa" href="https://platzi.com/clases/1421-pruebas-software/15303-ciclo-de-vida-del-software/">Ciclo de vida del software.</a></p>

<hr>
<h4>Sigueme en <a class="aa" href="https://github.com/tomvargas" target="_blank"><i class="fab fa-github"></i> Ghithub</a></h4>

